services:
  laravel:
    container_name: laravel
    build:
      context: laravel
      dockerfile: Dockerfile
    volumes:
      - ./laravel/:/var/www
    depends_on:
      - db
      - redis
      - rabbitmq
    command: ["php-fpm"]
    restart: always
    ports:
      - '9002:9000'
    networks:
      - app

  horizon:
    container_name: horizon
    build:
      context: laravel
      dockerfile: Dockerfile
    volumes:
      - ./laravel/:/var/www
    depends_on:
      - db
      - redis
      - rabbitmq
    command: ["php","artisan","horizon"]
    profiles: 
      - workers
    restart: always
    networks:
      - app

  schedule:
    container_name: schedule
    build:
      context: laravel
      dockerfile: Dockerfile
    volumes:
      - ./laravel/:/var/www
    depends_on:
      - db
      - redis
      - rabbitmq
    command: ["php", "artisan", "schedule:run"]
    profiles: 
      - workers
    restart: always
    networks:
      - app
  

  # db:
  #   image: mysql:8.0
  #   restart: always
  #   environment:
  #       MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
  #       MYSQL_DATABASE: ${DB_DATABASE}
  #       MYSQL_USER: ${DB_USERNAME}
  #       MYSQL_PASSWORD: ${DB_PASSWORD}
  #   volumes:
  #       - ./docker/data:/var/lib/mysql
  #   ports:
  #       - ${DB_PORT}:${DB_PORT}
  #   networks:
  #       - app

  db:
    image: postgres:15
    restart: always
    volumes:
      - ./docker/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - ${DB_PORT}:${DB_PORT}
    networks:
      - app

  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./laravel/:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/etc-letsencrypt:/etc/letsencrypt
    networks:
      - app

  certbot:
    image: certbot/certbot
    depends_on:
      - nginx
    container_name: certbot
    volumes:
      - ./docker/nginx/etc-letsencrypt:/etc/letsencrypt
      - ./laravel/:/var/www
    command: certonly --webroot --webroot-path=/var/www/public --email ${ADMIN_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN} -v
    profiles: 
      - certbot
    networks:
      - app

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: ${RABBITMQ_HOST}
    ports:
        - ${RABBITMQ_ADMIN_PORT}:${RABBITMQ_ADMIN_PORT}
        - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
    restart: always
    volumes:
      - ./docker/rabbitmq:/var/lib/rabbitmq
      - ./docker/rabbitinit/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./docker/rabbitinit/definitions.json:/etc/rabbitmq/definitions.json:ro
    networks:
      - app

  redis:
      image: redis:alpine
      container_name: redis
      restart: always
      volumes:
      - ./docker/redis:/data
      command:
        - /bin/sh
        - -c
        - redis-server --requirepass ${REDIS_PASSWORD}
      ports:
        - ${REDIS_PORT}:${REDIS_PORT}
      networks:
      - app

networks:
    app:
        name: app